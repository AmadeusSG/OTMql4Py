## PyZmq

PyZMQ is the official Python binding for the ZeroMQ Messaging Library
and can be found at https://pypi.python.org/pypi/pyzmq 
The project's Home Page is at http://github.com/zeromq/pyzmq

It can be used to run a subscriber or publisher from outside of
Metatrader, to receive or send information. For example, look at
`OTZmqSubscribe.py` and `OTZmqPublish.py` in the `bin` directory of
https://github.com/OpenTrading/OTMql4Zmq/

We have used the latest version at the time of writing, but we expect
that any version will work.

### Installation

If you are running the Python(x,y) distribution, then `pyzmq` is
already included.

If you have `pip` installed in your Python and are connected to the
Internet, you can simply run `pip pyzmq`.

Otherwise, download the Python egg:
https://pypi.python.org/packages/2.7/p/pyzmq/pyzmq-14.5.0-py2.7-win32.egg
and `easy_install` it into your Python's site-packages directory.

### Running under OTMqlPy

You can call ZeroMQ from the Python running under Mt4; see the file
`MQL4/Experts/OTMql4/OTPyTestZmqEA.mq4`
which is a work in progress. Attach that expert advisor to a chart,
and then in a command console, run
`python OTZmqSubscribe.py -v 4 tick timer bar`
The ZeroMQ messages will be sent from Mt4, via Python pyzmq,
to the pyzmq in OTZmqSubscribe.py.

Run
`python OTZmqSubscribe.py --help `
for details on the command-line options. `tick timer bar` says that
you want to be notified of the tick, timer and bar topics, which
are defined in the EA code.

This is Mt4 publishing the information that the Python script
`OTZmqSubscribe.py` subscribes to. We will have the other direction shortly,
where a Python script requests from Mt4 for things like account
information and placing orders.

